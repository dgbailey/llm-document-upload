version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - app-network

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: aiuser
      POSTGRES_PASSWORD: aipassword
      POSTGRES_DB: ai_doc_summary
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aiuser"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://aiuser:aipassword@postgres/ai_doc_summary
      REDIS_URL: redis://redis:6379/0
      DEMO_MODE: "true"
      DEMO_FAILURE_RATE: "0.1"
      DEMO_SLOW_TASK_RATE: "0.2"
      SENTRY_DSN: https://0313923c6f51e6c4624392bf2fd30c50@o88872.ingest.us.sentry.io/4509783836196864
      ENVIRONMENT: development
      APP_VERSION: "1.0.0"
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - app-network

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://aiuser:aipassword@postgres/ai_doc_summary
      REDIS_URL: redis://redis:6379/0
      DEMO_MODE: "true"
      SENTRY_DSN: https://0313923c6f51e6c4624392bf2fd30c50@o88872.ingest.us.sentry.io/4509783836196864
      ENVIRONMENT: development
      APP_VERSION: "1.0.0"
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      backend:
        condition: service_started
    command: celery -A app.celery_app worker --loglevel=info
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      VITE_API_URL: http://localhost:8000
      VITE_SENTRY_DSN: https://7c201729cfd68fb6cf47eb8116a6e0a1@o88872.ingest.us.sentry.io/4509783841308672
      VITE_ENVIRONMENT: development
      VITE_APP_VERSION: "1.0.0"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  uploads: